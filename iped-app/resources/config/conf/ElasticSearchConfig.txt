##################################
# ElasticSearch Task configuration
#################################

# Host name or ip address of Elastic cluster
host = Sepinf-hpw03

# Port where Elastic is listening
port = 9200

# Protocol to use: http or https
protocol = http

# Number of primary index shards (subindexes) in which each index is broken.
# Often each index shard goes to a different cluster node. 
index.number_of_shards = 1

# Number of replicas for each index shard. Often goes to a different node.
index.number_of_replicas = 1

# Index lifecycle policy. You must define it in Elastic. For opendistro must be commented
# index.lifecycle.name = default_policy

# Minimum size of bulk index requests in bytes. Items are accumulated until this size is reached.
# This is a per thread setting
min_bulk_size = 8388608

# Minimum number of items in bulk index requests. Actually an OR is made with min_bulk_size, not an AND.
# This is a per thread setting 
min_bulk_items = 1000

# Maximum number of simultaneous async bulk requests. This is a per thread setting.
# Heap usage in client is about num_threads x min_bulk_size x max_async_requests
max_async_requests = 5

# Timeout of index requests
timeout_millis = 3600000

# Timeout to connect to Elastic
connect_timeout_millis = 5000

# Maximum number of indexed fields
index.mapping.total_fields.limit = 10000

# Use a custom analyzer that tokenizes on non digits and non latin1 chars,
# converts them to lowercase and uses asciifolding filter
useCustomAnalyzer = true

# Validate the SSL certificate, it is not recommended to disable this in production
validateSSL = true

# index the extracted text using term vectors. This improves the highlight speed, but increases the index size by around 30%. 
useTermVector = false

# Number of times the index request will be retried. Value -1 retries forever.
retries = 1