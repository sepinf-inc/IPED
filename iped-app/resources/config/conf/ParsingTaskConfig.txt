# Use external processes to parse files, isolating infinite loops and OutOfMemoryErrors while parsing.
# Uses more memory and it is a bit slower because more processes are started and communicated with.
enableExternalParsing = false

# Maximum number of external parsing processes. 'auto' uses half the number of logical CPU cores
# if OCR is disabled or the number of logical CPU cores if OCR is enabled.
numExternalParsers = auto

# Max heap memory for EACH external parser. Low values can cause parsing errors because of insufficient memory.
externalParsingMaxMem = 512M

# Parse files with no specific decoder, like binaries, unknown, pagefile, unallocated, etc.
# Printable windows-1252, UTF-8 and UTF-16 strings are extracted from the files to be processed.
parseUnknownFiles = true

# Parse corrupted files extracting printable windows-1252, UTF-8 and UTF-16 strings.
# For example, deleted and partially overwritten images could have searchable plain text into them.
parseCorruptedFiles = true

# Minimum timeout (seconds) while parsing files. To this baseline will be added the result of timeOutPerMB * file size in MB (see next parameter).
# After the timeout, the file's raw strings will be indexed.
timeOut = 180

# Timeout (seconds) for each Megabyte of the file being parsed.
# Total_Timeout = timeOut + timeOutPerMB * <file_size_in_MB>
timeOutPerMB = 2

# Minimum size of raw strings extracted from unknown files for indexing.
minRawStringSize = 4

# Configure internal or external (eg ufed) parsers for phone data with more than one parser.
# Possible values: internal, external, all
phoneParsersToUse = internal

# List of UFED sources names for which IPED has a specific internal parser.
# This avoids duplicated decoding results when 'phoneParsersToUse = internal'
sourcesWithInternalParsers = WhatsApp, WhatsApp (Dual App), WhatsApp Business, Telegram

# If true, takes into account the characters' position on the page when reconstructing the extracted text.
# Needed to properly index rotated PDFs but doubles the processing time of PDFs.
sortPDFChars = false

# Processes images embedded in PDFs. Must be enabled to extract images from PDFs if they are expanded.
# If enabled, the OCR is applied over embedded images instead of the images generated by the rendering of each page.
# Sometimes the images are fragmented in PDFs, resulting in cut words or lines. In this case this option can be detrimental to the OCR. 
processImagesInPDFs = false

# Cache parsed text of files in temp folder, if it is bigger than 10M chars,
# so it can be reused in regex search and indexing, instead of parsing file content again. 
storeTextCacheOnDisk = true